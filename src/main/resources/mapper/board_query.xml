<?xml version="1.0" encoding="UTF-8"?>

<!-- sql -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.enjoytrip.board.dao.BoardDao">
    <!-- 여기서 특정양만큼의 게시글 보여주기, 닉네임 저장-->
    <select id= "boardList" parameterType = "com.example.enjoytrip.common.dto.PageDto" resultType="com.example.enjoytrip.board.dto.BoardDto">
        select board_id, (select t.touristspot_title from tourist_spot t where t.touristspot_id = b.touristspot_id) as touristspot_title,
               b.touristspot_id, b.board_title, b.board_content, b.board_category, b.account_id, b.account_mbti, b.account_nickname,
               (select count(account_id) from like_board l where b.board_id = l.board_id) board_recommend_count
          from board b
        <if test="searchWord!=null">where b.board_title like concat('%', #{searchWord}, '%')</if>
        <if test="searchMbti!=null">and b.account_mbti = #{searchMbti}</if>
      order by board_id
         limit #{pageSize} offset #{pageNum}
    </select>

    <select id= "boardDetail" parameterType = "int" resultType = "com.example.enjoytrip.board.dto.BoardDto">
        select *
        from board
        where board_id = #{boardId}
    </select>

    <!-- insert 자체에서 닉네임 저장-->
    <insert id ="boardInsert" useGeneratedKeys="true"
            keyProperty="boardId" keyColumn="board_id"
            parameterType="com.example.enjoytrip.board.dto.BoardDto">
        insert into board (touristspot_id, board_title, board_content, board_category, account_id, account_mbti, account_nickname)
             values (#{touristspotId},#{boardTitle},#{boardContent}, #{boardCategory},#{accountId}, #{accountMbti}, #{accountNickname})
    </insert>

    <update id = "boardUpdate" parameterType="com.example.enjoytrip.board.dto.BoardDto">
        update board
            set board_title = #{boardTitle}
              , board_content = #{boardContent}
              , board_category = #{boardCategory}
        where board_id = #{boardId}
    </update>

    <delete id = "boardDelete" parameterType="Integer">
        delete from board where board_id = #{boardId}
    </delete>

    <select id = "boardRecommendList" parameterType="Integer">
        select board_id from like_board where account_id = #{accountId} order by board_id desc
    </select>
    <select id = "boardRecommendCount" parameterType="Integer">
        select count(account_id) from like_board where board_id = #{boardId}
    </select>
    <insert id = "boardRecommendInsert">
        insert into like_board (board_id, account_id)
        values (#{boardId}, #{accountId})
    </insert>
    <delete id = "boardRecommendDelete" parameterType="Integer">
        delete from like_board where board_id = #{boardId} and account_id = #{accountId}
    </delete>


</mapper>